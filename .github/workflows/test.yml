name: CI

on:
  workflow_dispatch:
#  push:
#    branches-ignore:
#      - '*travis*'
#      - '*appveyor*'
  schedule:
    - cron:  '0 20 * * 5'

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
     matrix:
       include:
         - os: 'ubuntu-20.04'
         - os: 'ubuntu-22.04'
         - os: 'ubuntu-24.04'

    steps:
    - uses: actions/checkout@v4
      with:
        repository: eserte/ci-helper-cpan-pm
        path: ci-helper-cpan-pm

    - name: apt hacks
      # the already installed libgd3 conflicts with libgd-dev to be installed
      # also, /etc/apt/sources.list should be sufficient; all the other repositories are possibly problematic
      run: |
        sudo rm -f /etc/apt/sources.list.d/*.list
        sudo apt-get update -qq
        sudo apt-get remove -y libgd3 nginx
      if: "startsWith(matrix.os, 'ubuntu-')"

    - name: before_install
      run: |
        $GITHUB_WORKSPACE/ci-helper-cpan-pm/ci-helper-cpan-pm --distroprefs=https://github.com/eserte/srezic-cpan-distroprefs --enable-sysdeps --sysdeps-branch=master
    - name: check ci-helper-cpan-pm
      run: perl -c $GITHUB_WORKSPACE/ci-helper-cpan-pm/ci-helper-cpan-pm

    - name: install File::LibMagic
      run: cpan File::LibMagic
    - name: check File::LibMagic
      run: perl -MFile::LibMagic -e1

    - name: check if GD version is OK
      # https://github.com/lstein/Perl-GD/issues/55
      run: |
        if grep -sq "VERSION_CODENAME=.*noble" /etc/os-release && zgrep -l RURBAN/GD-2.83.tar.gz ~/.cpan/sources/modules/02packages.details.txt.gz >/dev/null; then echo "SKIP_GD=true" >> $GITHUB_ENV; fi
    - name: install GD
      run: cpan GD
      if: "!env.SKIP_GD"
    - name: check GD
      run: perl -MGD -e1
      if: "!env.SKIP_GD"

    - name: install Curses
      run: cpan Curses
    - name: check Curses
      run: perl -MCurses -e1

    - name: install DB_File
      run: cpan DB_File
    - name: check DB_File
      run: perl -MDB_File -e1

    - name: install Imager
      run: cpan Imager
    - name: check Imager
      run: perl -MImager -e1

    - name: install Linux::Inotify2
      run: cpan Linux::Inotify2
    - name: check Linux::Inotify2
      run: perl -MLinux::Inotify2 -e1

    - name: install Pango
      run: cpan Pango
    - name: check Pango
      run: perl -MPango -e1

    - name: install Tk
      run: cpan Tk
    - name: check Tk
      run: perl -MTk -e1

    - name: install Net::Curl
      run: cpan Net::Curl
    - name: check Net::Curl
      run: perl -MNet::Curl -e1

    - name: install XML::LibXML
      run: cpan XML::LibXML
    - name: check XML::LibXML
      run: perl -MXML::LibXML -e1

    - name: check if Prima version is OK
      run: |
        if zgrep -l KARASIK/Prima-1.68002.tar.gz ~/.cpan/sources/modules/02packages.details.txt.gz >/dev/null; then echo "SKIP_PRIMA=true" >> $GITHUB_ENV; fi
    - name: install Prima
      run: cpan Prima
      if: "!env.SKIP_PRIMA"
## XXX fails without DISPLAY
#    - name: check Prima
#      run:  perl -MPrima -e1
