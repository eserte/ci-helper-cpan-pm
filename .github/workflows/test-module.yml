name: Test specific CPAN module
run-name: Test ${{ inputs.module }}

on:
  workflow_dispatch:
    inputs:
      module:
        type: string
        required: true
      include-distroprefs:
        type: boolean
        default: true
      include-sysdeps:
        type: boolean
        default: true
      enable-cpan-reporter:
        type: boolean
        default: false
      distroprefs-branch:
        type: string
        default: master
      sysdeps-branch:
        type: string
        default: master
      test-only:
        type: boolean
        default: false
      debug:
        type: boolean
        default: false

jobs:
  test-module:
    name: on ${{ matrix.container || matrix.os }}
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: 'macos-13'
            container: ~
          - os: 'macos-14'
            container: ~
          - os: 'macos-15'
            container: ~
          - os: 'ubuntu-latest'
            container: ubuntu:20.04
          - os: 'ubuntu-22.04'
            container: ~
          - os: 'ubuntu-24.04'
            container: ~
          # another ubuntu as a container, not runner
          - os: 'ubuntu-latest'
            container: ubuntu:24.04
          # fedora: use the minimum and maximum supported versions
          - os: 'ubuntu-latest'
            container: fedora:38
          - os: 'ubuntu-latest'
            container: fedora:42
          - os: 'ubuntu-latest'
            container: rockylinux:9
          #- os: 'ubuntu-latest'
          ## XXX disable until a mirrorlist replacement is found
          #  container: centos:7
          ## XXX needs more work
          #- os: 'ubuntu-latest'
          #  container: debian:stretch
          - os: 'ubuntu-latest'
            container: debian:buster
          - os: 'ubuntu-latest'
            container: debian:bullseye
          - os: 'ubuntu-latest'
            container: debian:bookworm
          - os: 'ubuntu-latest'
            container: debian:trixie
          ## XXX would work if CPAN::Plugin::Sysdeps had alpine support
          #- os: 'ubuntu-latest'
          #  container: alpine:latest

    steps:
    - name: Current workflow inputs
      run: echo "${{ toJSON(github.event.inputs) }}"

    - uses: actions/checkout@v3
      with:
        repository: eserte/ci-helper-cpan-pm
        path: ci-helper-cpan-pm
      if: matrix.container == 'centos:7'
    - uses: actions/checkout@v4
      with:
        repository: eserte/ci-helper-cpan-pm
        path: ci-helper-cpan-pm
      if: matrix.container != 'centos:7'

    - name: "CentOS: install epel"
      run: |
        yum -y install epel-release
      if: "startsWith(matrix.container, 'centos')"

    - name: "Rocky Linux: Clean and update repositories"
      run: |
        dnf clean all
        rm -rf /var/cache/yum
        dnf update -y
      if: "startsWith(matrix.container, 'rockylinux')"

    - name: "Rocky Linux: Enable CRB repository"
      run: |
        dnf install -y dnf-plugins-core
        dnf config-manager --set-enabled crb
      if: "startsWith(matrix.container, 'rockylinux')"

    - name: "rpm-based systems: install perl, CPAN.pm, git..."
      run: |
        dnf -y install "perl(CPAN)" "perl(Test::More)" "perl(Parse::CPAN::Meta)" \
          git make gcc patch glibc-devel
      if: "startsWith(matrix.container, 'fedora') || startsWith(matrix.container, 'centos') || startsWith(matrix.container, 'rockylinux')"

    - name: "apt-based systems: install perl, CPAN.pm, git, make, cc..."
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudocmd=$( [ "$(id -u)" -ne 0 ] && echo "sudo" || echo "" )
        $sudocmd apt-get update -yq && $sudocmd apt-get install -yqq perl git make gcc g++
        echo "DEBIAN_FRONTEND=noninteractive" >> "$GITHUB_ENV"
      if: "startsWith(matrix.container, 'debian') || startsWith(matrix.container || matrix.os, 'ubuntu')"

    - name: "apk-based systems: install perl, CPAN.pm, git..."
      run: |
        apk update -q && apk add -q perl perl-utils git make gcc
      if: "startsWith(matrix.container, 'alpine')"

    - name: "perlbrew-based systems: add Perl executable path to GITHUB_PATH"
      run: |
        echo "$(perl -MConfig -e 'print $Config{sitebin}')" >> $GITHUB_PATH
      if: "startsWith(matrix.os, 'macos')"

    - name: apt hacks
      # the already installed libgd3 conflicts with libgd-dev to be installed
      # also, /etc/apt/sources.list should be sufficient; all the other repositories are possibly problematic
      run: |
        if [ -d /etc/apt/sources.list.d ]; then
          echo "Remove additional apt sources..."
          sudocmd=$( [ "$(id -u)" -ne 0 ] && echo "sudo" || echo "" )
          $sudocmd rm -f /etc/apt/sources.list.d/*.list
          $sudocmd apt-get update -qq
          $sudocmd apt-get remove -y libgd3 nginx
        fi

    - name: before build
      run: |
        distroprefs_opts=
        if [ ${{ inputs.include-distroprefs }} = 'true' ]
        then
            distroprefs_opts='--distroprefs=https://github.com/eserte/srezic-cpan-distroprefs --distroprefs-branch=${{ inputs.distroprefs-branch }}'
        fi
        sysdeps_opts=
        if [ ${{ inputs.include-sysdeps }} = 'true' ]
        then
            sysdeps_opts='--enable-sysdeps --sysdeps-branch=${{ inputs.sysdeps-branch }}'
        fi
        cpan_reporter_opts=
        if [ ${{ inputs.enable-cpan-reporter }} = 'true' ]
        then
            cpan_reporter_opts='--enable-cpan-reporter --email-from=${{ github.actor }}@users.noreply.github.com'
        fi
        debug_opts=
        if [ ${{ inputs.debug }} = 'true' ]
        then
            debug_opts='--debug'
        fi
        set -ex
        $GITHUB_WORKSPACE/ci-helper-cpan-pm/ci-helper-cpan-pm --no-test $distroprefs_opts $sysdeps_opts $cpan_reporter_opts $debug_opts
    - name: cpan-sysdeps check
      continue-on-error: true
      run: |
        cpan-sysdeps --cpanmod ${{ inputs.module }}
    - name: cpan-sysdeps dry-run commands
      continue-on-error: true
      run: |
        cpan-sysdeps --cpanmod ${{ inputs.module }} --dry-run
    - name: ${{ inputs.test-only && 'test' || 'install' }} ${{ inputs.module }}
      run: |
        cpan ${{ inputs.test-only && '-t ' || '' }}${{ inputs.module }}
    - name: check ${{ inputs.module }}
      run: |
        $GITHUB_WORKSPACE/ci-helper-cpan-pm/gh-mod-check --test-only=${{ inputs.test-only }} ${{ inputs.module }}
    - name: Prepare artifact name
      if: always() && inputs.enable-cpan-reporter == true
      id: artifact-name
      shell: bash
      run: |
        if [ -n "${{ matrix.container }}" ]; then
          NAME="${{ matrix.container }}"
        else
          NAME="${{ matrix.os }}"
        fi
        NAME="${NAME//:/_}"
        echo "artifact_name=cpan-test-report-$NAME" >> $GITHUB_OUTPUT

    - name: upload CPAN test reports
      if: always() && inputs.enable-cpan-reporter == true
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.artifact-name.outputs.artifact_name }}
        path: ~/var/cpantesters/new/*.rpt

  test-module-windows:
    name: on windows
    runs-on: windows-latest
    steps:
    - name: Current workflow inputs
      run: echo "${{ toJSON(github.event.inputs) }}"
    - uses: actions/checkout@v4
      with:
        repository: eserte/ci-helper-cpan-pm
        path: ci-helper-cpan-pm
    - name: before build
      run: |
        $distroprefs_opts = ""
        if ("${{ inputs.include-distroprefs }}" -eq "true") {
            $distroprefs_opts = "--distroprefs=https://github.com/eserte/srezic-cpan-distroprefs --distroprefs-branch=${{ inputs.distroprefs-branch }}"
        }
        $sysdeps_opts = ""
        if ("${{ inputs.include-sysdeps }}" -eq "true") {
            $sysdeps_opts = "--enable-sysdeps --sysdeps-branch=${{ inputs.sysdeps-branch }}"
        }
        $cpan_reporter_opts = ""
        if ("${{ inputs.enable-cpan-reporter }}" -eq "true") {
            $cpan_reporter_opts = "--enable-cpan-reporter --email-from=${{ github.actor }}@users.noreply.github.com"
        }
        $debug_opts = ""
        if ("${{ inputs.debug }}" -eq "true") {
            $debug_opts = "--debug"
        }
        $ci_helper_cmd = "perl $env:GITHUB_WORKSPACE\ci-helper-cpan-pm\ci-helper-cpan-pm --no-test $distroprefs_opts $sysdeps_opts $cpan_reporter_opts $debug_opts"
        Write-Host $ci_helper_cmd
        Invoke-Expression $ci_helper_cmd
    - name: cpan-sysdeps check
      continue-on-error: true
      run: |
        cpan-sysdeps --cpanmod ${{ inputs.module }}
    - name: cpan-sysdeps dry-run commands
      continue-on-error: true
      run: |
        cpan-sysdeps --cpanmod ${{ inputs.module }} --dry-run
    - name: ${{ inputs.test-only && 'test' || 'install' }} ${{ inputs.module }}
      run: |
        cpan ${{ inputs.test-only && '-t ' || '' }}${{ inputs.module }}
    - name: check ${{ inputs.module }}
      run: |
        $check_cmd = "perl $env:GITHUB_WORKSPACE\ci-helper-cpan-pm\gh-mod-check --test-only=${{ inputs.test-only }} ${{ inputs.module }}"
        Write-Host $check_cmd
        Invoke-Expression $check_cmd
    - name: Prepare artifact path
      if: always() && inputs.enable-cpan-reporter == true
      id: artifact-path
      run: |
        echo "userprofile=$env:USERPROFILE" >> $env:GITHUB_OUTPUT
    - name: upload CPAN test reports
      if: always() && inputs.enable-cpan-reporter == true
      uses: actions/upload-artifact@v4
      with:
        name: cpan-test-report-windows
        path: ${{ steps.artifact-path.outputs.userprofile }}\\var\\cpantesters\\new\\*.rpt

  test-module-freebsd:
    name: on ${{ matrix.operating_system }} ${{ matrix.osvers }} ${{ matrix.architecture }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - operating_system: freebsd
            osvers: '14.2'
            architecture: 'x86-64'
## XXX works, but is too slow --- maybe enable with a new "slow and obscure configurations" switch
#          - operating_system: freebsd
#            osvers: '14.2'
#            architecture: 'arm64'
          - operating_system: freebsd
            osvers: '13.4'
            architecture: 'x86-64'
          - operating_system: openbsd
            osvers: '7.6'
            architecture: 'x86-64'
          - operating_system: netbsd
            osvers: '10.1'
            architecture: 'x86-64'
    steps:
    - name: Current workflow inputs
      run: echo "${{ toJSON(github.event.inputs) }}"

    - uses: actions/checkout@v4
      with:
        repository: eserte/ci-helper-cpan-pm
        path: ci-helper-cpan-pm

    - uses: cross-platform-actions/action@v0.27.0
      with:
        operating_system: '${{ matrix.operating_system }}'
        version:          '${{ matrix.osvers }}'
        architecture:     '${{ matrix.architecture }}'
        shell: bash
        run: |
          echo "::group::Install basic system prereqs (perl...)"

          has_sysdeps_support=no
          case "${{ matrix.operating_system }}" in
            freebsd)
              sudo pkg update
              sudo pkg install -y perl5 git
              has_sysdeps_support=yes
              ;;
            openbsd)
              # Update packages and install with pkg_add
              sudo pkg_add -u
              sudo pkg_add perl git
              has_sysdeps_support=yes
              ;;
            netbsd)
              # Install using pkgin or pkg_add (depending on system setup)
              if command -v pkgin >/dev/null 2>&1; then
                sudo pkgin -y update
                sudo pkgin -y install perl git
              else
                sudo pkg_add perl git
              fi
              has_sysdeps_support=no
              ;;
            *)
              echo "Unsupported OS: ${{ matrix.operating_system }}"
              exit 1
              ;;
          esac

          echo "::group::Setup CPAN environment"

          distroprefs_opts=
          if [ ${{ inputs.include-distroprefs }} = 'true' ]
          then
              distroprefs_opts='--distroprefs=https://github.com/eserte/srezic-cpan-distroprefs --distroprefs-branch=${{ inputs.distroprefs-branch }}'
          fi
          sysdeps_opts=
          if [ ${{ inputs.include-sysdeps }} = 'true' ]
          then
              if [ "$has_sysdeps_support" = "yes" ]
              then
                  sysdeps_opts='--enable-sysdeps --sysdeps-branch=${{ inputs.sysdeps-branch }}'
              else
                  echo "Turning off sysdeps option. No support for operating system ${{ matrix.operating_system }}"
              fi
          fi
          cpan_reporter_opts=
          if [ ${{ inputs.enable-cpan-reporter }} = 'true' ]
          then
              cpan_reporter_opts='--enable-cpan-reporter --email-from=${{ github.actor }}@users.noreply.github.com'
          fi
          debug_opts=
          if [ ${{ inputs.debug }} = 'true' ]
          then
              debug_opts='--debug'
          fi
          set -ex
          $GITHUB_WORKSPACE/ci-helper-cpan-pm/ci-helper-cpan-pm --no-test --reports-dir=$HOME/work/var/cpantesters/new $distroprefs_opts $sysdeps_opts $cpan_reporter_opts $debug_opts

          echo "::group::Build and test module"

          cpan ${{ inputs.test-only && '-t ' || '' }}${{ inputs.module }}

          $GITHUB_WORKSPACE/ci-helper-cpan-pm/gh-mod-check --test-only=${{ inputs.test-only }} ${{ inputs.module }}

    - name: upload CPAN test reports
      if: always() && inputs.enable-cpan-reporter == true
      uses: actions/upload-artifact@v4
      with:
        name: cpan-test-report-${{ matrix.operating_system }}-${{ matrix.osvers }}-${{ matrix.architecture }}
        path: ~/work/var/cpantesters/new/*.rpt
